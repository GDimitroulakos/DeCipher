/* *********************************************************************************** */
/* Title : Automatically Generated C++ File by the GAN Tool								      */
/* File :C:\Users\ALMA\Desktop\scdecl_out\CD_ASTDefines.cpp																	  */
/* Main Author: Grigorios Dimitroulakos															  */
/* Contributors: Christakis Lezos																  */
/* Creation Time:19:2, 19/3/2012		*/
/* *********************************************************************************** */

#include "CD_ASTDefines.h"

const char *DLterminal_strings[] = {
"NotApplicable",
"LEAST",
"CONSTANT_EXPRESSION",
"INT",
"LONG",
"REGISTER",
"FLOAT",
"DOUBLE",
"UNSIGNED",
"SIGNED",
"TYPE_NAME",
"STRUCT",
"IDENTIFIER",
"UNION",
"TYPEDEF",
"ENUM",
"EXTERN",
"STATIC",
"AUTO",
"VOID",
"ELLIPSIS",
"CHAR",
"SHORT",
"TYPE_EXPRESSION",
"CONST",
"VOLATILE",
"IN",
"OUT",
"SCOPE_OP",
"SEMICOLON",
"COMMA",
"EQUALSIGN",
"LBRACE",
"RBRACE",
"COLON",
"LPARENTHESIS",
"RPARENTHESIS",
"LBRACKET",
"RBRACKET",
"ASTERISK"
};
const char *DLnonterminal_strings[] = {
"NT_TERMINAL",
"scdeclaration_unit",
"scdeclarations",
"scdeclaration",
"type_name",
"declaration_specifiers",
"init_declarator_list",
"storage_class_specifier",
"type_specifier",
"type_qualifier",
"init_declarator",
"declarator",
"initializer",
"struct_or_union_specifier",
"enum_specifier",
"struct_or_union",
"qualified_id",
"struct_declaration_list",
"struct_declaration",
"specifier_qualifier_list",
"struct_declarator_list",
"struct_declarator",
"constant_expression",
"enumerator_list",
"enumerator",
"pointer",
"direct_declarator",
"parameter_type_list",
"type_qualifier_list",
"parameter_list",
"parameter_declaration",
"abstract_declarator",
"direct_abstract_declarator",
"assignment_expression",
"initializer_list"
};